// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shuttle.Recall.EntityFrameworkCore.SqlServer.Storage;

#nullable disable

namespace Shuttle.Recall.EntityFrameworkCore.SqlServer.Storage.Migrations
{
    [DbContext(typeof(StorageDbContext))]
    [Migration("20241114160758_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("EventStore")
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Shuttle.Recall.EntityFrameworkCore.SqlServer.Storage.Models.EventType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "TypeName" }, "IX_EventType")
                        .IsUnique();

                    b.ToTable("EventType", "EventStore");
                });

            modelBuilder.Entity("Shuttle.Recall.EntityFrameworkCore.SqlServer.Storage.Models.IdKey", b =>
                {
                    b.Property<string>("UniqueKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UniqueKey");

                    b.ToTable("IdKey", "EventStore");
                });

            modelBuilder.Entity("Shuttle.Recall.EntityFrameworkCore.SqlServer.Storage.Models.PrimitiveEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<Guid?>("CorrelationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateRegistered")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<byte[]>("EventEnvelope")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EventTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("SequenceNumber")
                        .HasColumnType("bigint");

                    b.HasKey("Id", "Version");

                    b.ToTable("PrimitiveEvent", "EventStore");
                });

            modelBuilder.Entity("Shuttle.Recall.EntityFrameworkCore.SqlServer.Storage.Models.PrimitiveEventJournal", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<long>("SequenceNumber")
                        .HasColumnType("bigint");

                    b.HasKey("Id", "Version");

                    b.ToTable("PrimitiveEventJournal", "EventStore");
                });
#pragma warning restore 612, 618
        }
    }
}
